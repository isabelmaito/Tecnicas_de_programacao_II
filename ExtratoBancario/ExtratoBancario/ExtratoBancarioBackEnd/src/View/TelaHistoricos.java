/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.Historico;
import DAO.connectDAO;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Alunos
 */
public class TelaHistoricos extends javax.swing.JFrame {

    /**
     * Creates new form Historicos
     */
    public TelaHistoricos() {
        initComponents();
    }
    
    String operacaoAtivaGlobal = "Nenhum";
    public TelaHistoricos(String operacaoAtiva){
        initComponents();
        
        operacaoAtivaGlobal = operacaoAtiva;
        
        String operacao = "Incluir";
        
        if(operacaoAtiva.equals(operacao)){
            idTitle.setVisible(true);
            IDHistorico.setVisible(true);
            HistoricoHistorico.setVisible(true);
            
            ButtonCadastrar.setVisible(true);
            ButtonDetalhes.setVisible(true);   
        }
        
         operacao = "Alterar";
        
        if(operacaoAtiva.equals(operacao)){
            idTitle.setVisible(true);
            IDHistorico.setVisible(false);
            HistoricoHistorico.setVisible(true);
            
            ButtonCadastrar.setVisible(true);
            ButtonDetalhes.setVisible(false); 
            
             ButtonCadastrar.setText("Pesquisar");            
        }
        
        operacao = "Excluir";
        
        if(operacaoAtiva.equals(operacao)){
            idTitle.setVisible(true);
            IDHistorico.setVisible(false);
            HistoricoHistorico.setVisible(true);
            
            ButtonCadastrar.setVisible(false);
            ButtonDetalhes.setVisible(false); 
            
             ButtonCadastrar.setText("Excluir");  
        }
            
    }

    Historico historico_tela = new Historico();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        histTitle = new javax.swing.JLabel();
        HistoricoHistorico = new javax.swing.JTextField();
        idTitle = new javax.swing.JLabel();
        IDHistorico = new javax.swing.JTextField();
        ButtonCadastrar = new javax.swing.JButton();
        ButtonDetalhes = new javax.swing.JButton();
        Limpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        histTitle.setText("Historico");

        HistoricoHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistoricoHistoricoActionPerformed(evt);
            }
        });

        idTitle.setText("ID");

        IDHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDHistoricoActionPerformed(evt);
            }
        });

        ButtonCadastrar.setText("Cadastrar");
        ButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCadastrarActionPerformed(evt);
            }
        });

        ButtonDetalhes.setText("Detalhes");
        ButtonDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDetalhesActionPerformed(evt);
            }
        });

        Limpar.setText("Limpar");
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(histTitle)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IDHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonDetalhes)
                        .addGap(115, 115, 115)
                        .addComponent(Limpar))
                    .addComponent(HistoricoHistorico))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTitle)
                    .addComponent(IDHistorico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(histTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HistoricoHistorico, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCadastrar)
                    .addComponent(ButtonDetalhes)
                    .addComponent(Limpar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HistoricoHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistoricoHistoricoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HistoricoHistoricoActionPerformed

    private void IDHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDHistoricoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDHistoricoActionPerformed

    private void ButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCadastrarActionPerformed
        System.out.println(operacaoAtivaGlobal);
        String operacaoExcluir;
        String operacao = "Incluir";
        if(operacaoAtivaGlobal.equals(operacao)){ 
            try{
            historico_tela.setID_historico(Integer.valueOf(IDHistorico.getText()));
            historico_tela.setHistorico(HistoricoHistorico.getText());
            
            
            connectDAO DaoHist = new connectDAO();
            DaoHist.connectDB();
            DaoHist.insereRegistroJFBD("HISTORICOS", historico_tela.dadosSQLValues());
        }catch(Exception erro){
            JOptionPane.showMessageDialog(this, erro.getMessage());
            return;
        }
        
        JOptionPane.showMessageDialog(this, "Historico Cadastrado");
        this.setVisible(false);
        this.dispose();
    }
        
    operacao = "Alteração";
        if(operacaoAtivaGlobal.equals(operacao)){
            
        
            try{
            historico_tela.setID_historico(Integer.valueOf(IDHistorico.getText()));
            historico_tela.setHistorico(HistoricoHistorico.getText());
            
            connectDAO DaoHist = new connectDAO();
            DaoHist.connectDB();
            DaoHist.alteraRegistroJFBD("HISTORICOS", historico_tela.alterarDadosSQLValues(), "ID_HIS='"+historico_tela.getID_historico()+"'");
        }catch(Exception erro){
            JOptionPane.showMessageDialog(this, erro.getMessage());
            
        }
            JOptionPane.showMessageDialog(this, "Conta Alterada");
            this.setVisible(false);
            this.dispose();   
        }    
        
        operacao = "Alterar";
        operacaoExcluir = "Excluir";
        if (operacaoAtivaGlobal.equals(operacao) || operacaoAtivaGlobal.equals(operacaoExcluir)){
            System.out.println("pesquisar para alterar");
            connectDAO DaoConta = new connectDAO();
            
            List<String> dadosSQL = DaoConta.pesquisaRegistroJFBD(
                    this.historico_tela.getTabela(),
                    this.historico_tela.pesquisaSQLValues(),
                    "ID_HIS='"+this.IDHistorico.getText()+"'"
            );
            
            historico_tela.importaSQLValues(dadosSQL);
            
            System.out.println("retornou, não deu erro silencioso");
            
            this.HistoricoHistorico.setText(historico_tela.getHistorico());
            this.IDHistorico.setText(String.valueOf(historico_tela.getID_historico()));
            
            idTitle.setVisible(false);
            IDHistorico.setVisible(true);
            HistoricoHistorico.setVisible(true);
            
            if(operacaoAtivaGlobal.equals(operacaoExcluir)) {
                ButtonCadastrar.setText("Excluir");
                operacaoAtivaGlobal = "Exclusão";
            } else {
                ButtonCadastrar.setText("Alterar");
                operacaoAtivaGlobal = "Alteração";
            }
            
    }
            // TODO add your handling code here:
    }//GEN-LAST:event_ButtonCadastrarActionPerformed

    private void ButtonDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDetalhesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonDetalhesActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
        IDHistorico.setText(" ");
        HistoricoHistorico.setText(" ");
       // TODO add your handling code here:
    }//GEN-LAST:event_LimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaHistoricos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCadastrar;
    private javax.swing.JButton ButtonDetalhes;
    private javax.swing.JTextField HistoricoHistorico;
    private javax.swing.JTextField IDHistorico;
    private javax.swing.JButton Limpar;
    private javax.swing.JLabel histTitle;
    private javax.swing.JLabel idTitle;
    // End of variables declaration//GEN-END:variables
}
